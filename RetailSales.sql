/*
----------------------------------------------------------------------------------
-- Project Title: Retail Sales Analysis ‚Äì Customer Purchase Behavior Dashboard
-- Description  : A comprehensive SQL Server analysis project to uncover key trends,
--                performance metrics, and customer segmentation using retail sales data.
-- Tools Used   : SQL Server (T-SQL)
-- Author       : Elshayma (LBA Analytics & AI)
-- Copyright    : ¬© 2025 LBA Analytics and AI. All rights reserved.
-- Techniques   : JOINs, CTEs, Subqueries, Window Functions, Aggregations
-- Last Updated : 16 Oct 2025
----------------------------------------------------------------------------------
*/

/*
=================================================================================
Retail Sales Analysis ‚Äì Complete SQL Insights (SQL Server Edition)
Project By: Elshayma | LBA Analytics & AI | ¬© 2025 All Rights Reserved
=================================================================================
*/

/* 1Ô∏è‚É£ Q: What is the total revenue generated each month? */
SELECT
    FORMAT(order_date, 'yyyy-MM') AS Month,
    SUM(total_amount) AS TotalRevenue
FROM orders
GROUP BY FORMAT(order_date, 'yyyy-MM')
ORDER BY Month;


/* 2Ô∏è‚É£ Q: What is the RFM score (Recency, Frequency, Monetary) of each customer? */
WITH
    RFM_CTE
    AS
    (
        SELECT
            customer_id,
            DATEDIFF(DAY, MAX(order_date), GETDATE()) AS Recency,
            COUNT(DISTINCT order_id) AS Frequency,
            SUM(total_amount) AS Monetary
        FROM orders
        GROUP BY customer_id
    )
SELECT *
FROM RFM_CTE;


/* 3Ô∏è‚É£ Q: What is the revenue generated by each gender group? */
SELECT
    c.gender,
    SUM(o.total_amount) AS TotalRevenue
FROM orders o
    JOIN customers c ON o.customer_id = c.customer_id
GROUP BY c.gender;


/* 4Ô∏è‚É£ Q: Which 5 product categories sold the most units? */
SELECT TOP 5
    p.category,
    SUM(oi.quantity) AS TotalUnitsSold
FROM order_items oi
    JOIN products p ON oi.product_id = p.product_id
GROUP BY p.category
ORDER BY TotalUnitsSold DESC;


/* 5Ô∏è‚É£ Q: How many orders and how much revenue was generated each day in the last 30 days? */
SELECT
    CAST(order_date AS DATE) AS OrderDate,
    COUNT(DISTINCT order_id) AS Orders,
    SUM(total_amount) AS Revenue
FROM orders
WHERE order_date >= DATEADD(DAY, -30, GETDATE())
GROUP BY CAST(order_date AS DATE)
ORDER BY OrderDate;


/* 6Ô∏è‚É£ Q: What is the return rate for each customer region? */
SELECT
    c.location,
    COUNT(DISTINCT r.order_id) * 1.0 / COUNT(DISTINCT o.order_id) AS ReturnRate
FROM returns r
    JOIN orders o ON r.order_id = o.order_id
    JOIN customers c ON o.customer_id = c.customer_id
GROUP BY c.location;


/* 7Ô∏è‚É£ Q: Who are the top 10 highest spending customers? */
SELECT
    customer_id,
    SUM(total_amount) AS LifetimeRevenue
FROM orders
GROUP BY customer_id
ORDER BY LifetimeRevenue DESC
OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;


/* 8Ô∏è‚É£ Q: What is the average number of products ordered per order? */
SELECT
    AVG(ItemCount) AS AvgBasketSize
FROM (
    SELECT order_id, COUNT(*) AS ItemCount
    FROM order_items
    GROUP BY order_id
) AS Basket;


/* 9Ô∏è‚É£ Q: Which products have the highest return rate? */
SELECT
    p.product_id,
    p.category,
    COUNT(r.return_id) AS ReturnCount,
    CAST(COUNT(r.return_id) * 100.0 / NULLIF(COUNT(DISTINCT o.order_id), 0) AS DECIMAL(5,2)) AS ReturnRatePercent
FROM returns r
    JOIN orders o ON r.order_id = o.order_id
    JOIN order_items oi ON o.order_id = oi.order_id
    JOIN products p ON oi.product_id = p.product_id
GROUP BY p.product_id, p.category;


/* üîü Q: What is the month-over-month sales change using LAG()? */
WITH
    MonthlySales
    AS
    (
        SELECT
            FORMAT(order_date, 'yyyy-MM') AS Month,
            SUM(total_amount) AS Revenue
        FROM orders
        GROUP BY FORMAT(order_date, 'yyyy-MM')
    )
SELECT
    Month,
    Revenue,
    LAG(Revenue) OVER (ORDER BY Month) AS PreviousMonth,
    Revenue - LAG(Revenue) OVER (ORDER BY Month) AS MoMChange
FROM MonthlySales;


/* 1Ô∏è‚É£1Ô∏è‚É£ Q: Which customers are inactive for more than 90 days (churn risk)? */
WITH
    LastPurchase
    AS
    (
        SELECT customer_id, MAX(order_date) AS LastOrder
        FROM orders
        GROUP BY customer_id
    )
SELECT
    customer_id,
    DATEDIFF(DAY, LastOrder, GETDATE()) AS DaysSinceLastPurchase
FROM LastPurchase
WHERE DATEDIFF(DAY, LastOrder, GETDATE()) > 90;


/* 1Ô∏è‚É£2Ô∏è‚É£ Q: How many orders came from each age group? */
SELECT
    c.age_group,
    COUNT(o.order_id) AS Orders
FROM orders o
    JOIN customers c ON o.customer_id = c.customer_id
GROUP BY c.age_group
ORDER BY Orders DESC;


/* 1Ô∏è‚É£3Ô∏è‚É£ Q: What percentage of total revenue is contributed by each category? */
WITH
    CategorySales
    AS
    (
        SELECT
            p.category,
            SUM(oi.quantity * oi.price) AS Revenue
        FROM order_items oi
            JOIN products p ON oi.product_id = p.product_id
        GROUP BY p.category
    ),
    Total
    AS
    (
        SELECT SUM(Revenue) AS TotalRevenue
        FROM CategorySales
    )
SELECT
    cs.category,
    cs.Revenue,
    CAST(cs.Revenue * 100.0 / ts.TotalRevenue AS DECIMAL(5,2)) AS ContributionPercent
FROM CategorySales cs
CROSS JOIN Total ts
ORDER BY ContributionPercent DESC;


/* 1Ô∏è‚É£4Ô∏è‚É£ üéØ Q: How many days does a customer take to make a repeat purchase (advanced)? */
WITH
    OrderedDates
    AS
    (
        SELECT
            customer_id,
            order_date,
            ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date) AS rn
        FROM orders
    ),
    FirstSecond
    AS
    (
        SELECT
            customer_id,
            MAX(CASE WHEN rn = 1 THEN order_date END) AS FirstOrder,
            MAX(CASE WHEN rn = 2 THEN order_date END) AS SecondOrder
        FROM OrderedDates
        WHERE rn <= 2
        GROUP BY customer_id
    )
SELECT
    customer_id,
    FirstOrder,
    SecondOrder,
    DATEDIFF(DAY, FirstOrder, SecondOrder) AS DaysToRepeat
FROM FirstSecond
WHERE SecondOrder IS NOT NULL;


/* 1Ô∏è‚É£5Ô∏è‚É£ üéØ Q: What is the full lifecycle of each product (first sold, last sold, revenue, rank)? */
WITH
    ProductSales
    AS
    (
        SELECT
            p.product_id,
            p.category,
            MIN(o.order_date) AS FirstSold,
            MAX(o.order_date) AS LastSold,
            COUNT(DISTINCT o.order_id) AS OrderCount,
            SUM(oi.quantity * oi.price) AS TotalRevenue
        FROM order_items oi
            JOIN products p ON oi.product_id = p.product_id
            JOIN orders o ON o.order_id = oi.order_id
        GROUP BY p.product_id, p.category
    ),
    Ranked
    AS
    (
        SELECT *,
            RANK() OVER (ORDER BY TotalRevenue DESC) AS RevenueRank
        FROM ProductSales
    )
SELECT
    product_id,
    category,
    FirstSold,
    LastSold,
    DATEDIFF(DAY, FirstSold, LastSold) AS ProductLifecycleDays,
    OrderCount,
    TotalRevenue,
    RevenueRank
FROM Ranked
WHERE OrderCount >= 5
ORDER BY RevenueRank;
